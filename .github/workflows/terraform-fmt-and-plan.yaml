name: terraform-lint-and-plan
on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - edited
    paths:
      - "infra/**"
jobs:
  terraform-dev:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      pull-requests: write
    defaults:
      run:
        shell: bash
        working-directory: infra/dev
    steps:
      - uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/oidc-readonly-role
          aws-region: ap-northeast-1
      - name: version
        run: echo "version=$(cat ../.terraform-version)" >> "$GITHUB_ENV"
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.version }}
      - name: init
        run: terraform init
      - name: fmt
        run: terraform fmt -check
      - name: validate
        run: terraform validate
      - name: plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: true
      - uses: actions/github-script@v7
        env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        with:
          script: |
            const output = `
              ### Terraform Plan

              Detect infra code changes. Please check terraform plan result.

              #### result \`${{ steps.plan.outcome }}\`

              <details><summary>Show Plan</summary>

              \`\`\`\n
              ${{ steps.plan.outputs.stdout }}
              \`\`\`

              </details>
            `
            const masked = output.replaceAll(process.env.AWS_ACCOUNT_ID, '***')
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: masked
            })
